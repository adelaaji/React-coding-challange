import Head from "next/head";

import { useEffect, useState } from "react";
import { getPhotos } from "../api/unsplash";
import useInfiniteScroll from "../hooks/useInfinite";
import styles from "../styles/Index.module.scss";
import Photo from "../components/Photo";
import { ImSpinner9 } from "react-icons/im";
import { Header } from "../components/Header";
import Errors from "../components/Errors";

export default function Home() {
  const [photos, setPhotos] = useState([]);
  const [page, setPage] = useState(1);
  const [errors, setErrors] = useState([]);

  /* custom hooks to run callback if page has end by scroll */
  const [isFetching, setIsFetching] = useInfiniteScroll(loadMorePhotos);

  const getInitialPhotos = () => {
    getPhotos()
      .then((data) => {
        data.originalResponse.ok ? setPhotos(data.response.results) : setErrors(data.errors);
      })
      .catch((error) => error.response && console.error(error.response.data));
  };

  /* On page load  */
  useEffect(() => getInitialPhotos(), []);

  /* Callback will run if page has end */
  function loadMorePhotos() {
    getPhotos(page).then((data) => {
      if (data.originalResponse.ok) {
        setPhotos([...photos, ...data.response.results]);
        setPage(page + 1);
        setIsFetching(false);
      } else {
        setErrors(data.errors);
      }
    });
  }

  return (
    <div>
      <Head>
        <title>Photo Gallery</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/fav.ico" />
      </Head>

      {isFetching && (
        <div className={styles.loadingSpinner}>
          <ImSpinner9 size={40} />
        </div>
      )}

      <div className={styles.mainContainer}>
        <Header />
        {errors.length > 0 && <Errors errors={errors} />}

        <div className={styles.photosGrid}>
          {photos.map((photo, index) => (
            <Photo photo={photo} key={index}></Photo>
          ))}
        </div>
      </div>
    </div>
  );
}
